---
# Install some necessary prerequisites
- name: Install prerequisites
  ansible.builtin.package:
    name:
      - gzip
      - tar

# Download and extract the MaxMind GeoIP2 database.
- name: Check the GeoIP database and replace if it is out of date
  block:
    - name: Set the full path for saving the database locally
      ansible.builtin.set_fact:
        geoip2_local_full_path: "{{ geoip2_local_path + geoip2_local_file }}"

    - name: Set the remote database URL
      ansible.builtin.set_fact:
        remote_db_url: >-
          {{
            maxmind_url_format |
            format(
              maxmind_url_base,
              maxmind_edition,
              maxmind_suffix_file,
              maxmind_license_key
            )
          }}

    - name: Set the remote checksum URL
      ansible.builtin.set_fact:
        remote_checksum_url: >-
          {{
            maxmind_url_format |
            format(
              maxmind_url_base,
              maxmind_edition,
              maxmind_suffix_checksum,
              maxmind_license_key
            )
          }}

    - name: Retrieve the checksum of the latest remote version of the database
      ansible.builtin.set_fact:
        latest_version_checksum: "{{ lookup('url', remote_checksum_url) }}"

    - name: Create the /usr/local/share/GeoIP/ directory
      ansible.builtin.file:
        mode: 0755
        path: "{{ geoip2_local_path }}"
        state: directory

    - name: Check if the downloaded tar.gz file exists
      ansible.builtin.stat:
        path: "{{ geoip2_local_full_path }}"
        checksum_algorithm: md5
      register: tarball

    - name: Check to see if the remote version is different from the local version
      ansible.builtin.set_fact:
        get_update: "{{ True if (not tarball.stat.exists or \
        tarball.stat.checksum != latest_version_checksum) else False }}"

    - name: Download, verify, and extract the latest database version if needed
      block:
        - name: Download GeoIP database and check (md5)
          ansible.builtin.get_url:
            url: "{{ remote_db_url }}"
            dest: "{{ geoip2_local_full_path }}"
            checksum: "md5:{{ latest_version_checksum }}"

        - name: Extract GeoIP database
          ansible.builtin.unarchive:
            src: "{{ geoip2_local_full_path }}"
            dest: "{{ geoip2_local_path }}"
            remote_src: yes
            extra_opts:
              - "--strip-components=1"
      when: get_update
  when: maxmind_license_key | default(false)
